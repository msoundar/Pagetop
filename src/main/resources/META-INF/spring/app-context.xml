<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:int-jdbc="http://www.springframework.org/schema/integration/jdbc"
	xmlns:si="http://www.springframework.org/schema/integration"
	xmlns:int-jms="http://www.springframework.org/schema/integration/jms"
	xmlns:int-mail="http://www.springframework.org/schema/integration/mail"
	xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	
	xsi:schemaLocation="
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/integration  http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/jdbc 	http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-2.0.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/jms 	http://www.springframework.org/schema/integration/jms/spring-integration-jms-2.1.xsd
		http://www.springframework.org/schema/integration/mail  http://www.springframework.org/schema/integration/mail/spring-integration-mail.xsd
		http://www.springframework.org/schema/integration/xml   http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd
		http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">
		

	<context:component-scan base-package="com.page.pagetop.service" />

 <import resource="classpath:META-INF/cxf/cxf.xml" />
 <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml" />
 <import resource="classpath:META-INF/cxf/cxf-servlet.xml" /> 

	<bean id="notificationProcessImpl" class="com.page.pagetop.service.NotificationProcessImpl">
	</bean>		

	 <jaxws:endpoint 
	  id="orderProcess" 
	  implementor="#notificationProcessImpl" 
	  address="/Notify" />
  

<!-- 	 <bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory"> -->
<!-- 	    <property name="targetConnectionFactory"> -->
<!-- 	      <bean class="org.apache.activemq.ActiveMQConnectionFactory"> -->
<!-- 	        <property name="brokerURL" value="tcp://localhost:61616"/> -->
<!-- 	      </bean> -->
<!-- 	    </property> -->
<!-- 	    <property name="sessionCacheSize" value="10"/> -->
<!-- 	    <property name="cacheProducers" value="false"/> -->
<!-- 	    <property name="clientId" value="myDurableConsumer.instance.03"/> -->
<!-- 	  </bean> -->

 	<int-jms:message-driven-channel-adapter id="jmsIn" destination-name="RxHWTNotificationQueue" channel="rxHWTNotificationChannelFilter" 
 		connection-factory="connectionFactory" />

	<bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
	        <property name="classesToBeBound">
	            <list>
	                <value>com.page.pagetop.service.NotificationMessage</value>
	            </list>
	        </property>
	</bean>                                        
	<int-xml:unmarshalling-transformer id="defaultUnmarshaller"
	                                      input-channel="rxHWTNotificationChannelFilter"
	                                      output-channel="unMarshalledMessageChannel"
	                                      unmarshaller="jaxbMarshaller"/>
	                                      
	<si:filter input-channel="unMarshalledMessageChannel" output-channel="mailAggregatorChannel"  throw-exception-on-rejection="true" 
		expression="payload.outBoundChannel.length() > 0  and payload.toAddress.length() > 0 and payload.fromAddress.length() > 0
					and payload.messageBody.length() > 0">	
	</si:filter>
	
<!--	
	<si:header-value-router input-channel="rxHWTNotificationChannel" header-name="rxhwt_notification_channel" resolution-required="true" >
		<si:mapping value="email" channel="eMailChannel"/>
	</si:header-value-router>
-->
	<si:channel id="mailAggregatorChannel">
	</si:channel>

	<si:aggregator id="myAggregator" 
			auto-startup="true" 
			input-channel="mailAggregatorChannel" 
			output-channel="eMailEnricher" 
			correlation-strategy="aggregatorBean" 
			ref="aggregatorBean" 
			method="aggregate" 						
			release-strategy="aggregatorBean" 
			release-strategy-method="canRelease"/> 
	
	<si:channel id="eMailEnricher">
	</si:channel>
	
	<int-mail:header-enricher input-channel="eMailEnricher" output-channel="eMailPayloadTransformer">
		<int-mail:subject expression="payload.subject"></int-mail:subject>
		<int-mail:to expression="payload.toAddress"></int-mail:to>
        <int-mail:from expression="payload.fromAddress"></int-mail:from>
	</int-mail:header-enricher>	

	<si:channel id="eMailPayloadTransformer">
	</si:channel>


	<si:transformer input-channel="eMailPayloadTransformer" 
		output-channel="smtpChannel"	
		expression="payload.messageBody"/>


		
	<si:channel id="smtpChannel">
	</si:channel>
	<int-mail:outbound-channel-adapter channel="smtpChannel"  host="localhost">
	</int-mail:outbound-channel-adapter>	

	<si:logging-channel-adapter id="logger" level="DEBUG" log-full-message="true"/>

	<bean id="aggregatorBean" class="com.page.pagetop.service.NotificationAggregator">
	</bean>		
	
</beans>
